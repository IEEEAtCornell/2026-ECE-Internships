name: Update Job Listings

on:
  schedule:
    # Run daily at 9 AM UTC (adjust timezone as needed)
    - cron: '0 9 * * *'
  workflow_dispatch: # Allow manual triggering
    inputs:
      force_update:
        description: 'Force update even if no new jobs found'
        required: false
        default: 'false'
        type: boolean

jobs:
  update-jobs:
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout repository
      uses: actions/checkout@v4
      with:
        token: ${{ secrets.GITHUB_TOKEN }}
    
    - name: Set up Python
      uses: actions/setup-python@v4
      with:
        python-version: '3.9'
    
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install -r requirements.txt
    
    - name: Run job scraper
      run: |
        python scrape.py
      env:
        # Add any environment variables needed for jobspy
        JOBSPY_API_KEY: ${{ secrets.JOBSPY_API_KEY }}
    
    - name: Generate README
      run: |
        python generate_readme.py
    
    - name: Check for changes
      id: changes
      run: |
        if [ -n "$(git status --porcelain)" ]; then
          echo "changes=true" >> $GITHUB_OUTPUT
        else
          echo "changes=false" >> $GITHUB_OUTPUT
        fi
    
    - name: Commit and push changes
      if: steps.changes.outputs.changes == 'true' || github.event.inputs.force_update == 'true'
      run: |
        git config --local user.email "action@github.com"
        git config --local user.name "GitHub Action"
        git add jobs.csv README.md
        git commit -m "ðŸ¤– Automated job listings update - $(date '+%Y-%m-%d %H:%M:%S')"
        git push
    
    - name: Create summary
      if: always()
      run: |
        echo "## Job Update Summary" >> $GITHUB_STEP_SUMMARY
        echo "- **Date**: $(date)" >> $GITHUB_STEP_SUMMARY
        echo "- **Changes detected**: ${{ steps.changes.outputs.changes }}" >> $GITHUB_STEP_SUMMARY
        echo "- **Force update**: ${{ github.event.inputs.force_update }}" >> $GITHUB_STEP_SUMMARY
        
        if [ -f "jobs.csv" ]; then
          job_count=$(wc -l < jobs.csv)
          echo "- **Total job listings**: $((job_count - 1))" >> $GITHUB_STEP_SUMMARY
        fi
